package(default_visibility=["//visibility:public"])
load("@npm//@bazel/typescript:index.bzl", "ts_library", "ts_devserver")
load("@build_bazel_rules_nodejs//internal/npm_install:npm_umd_bundle.bzl", "npm_umd_bundle")
load("@npm//webpack-cli:index.bzl", webpack = "webpack_cli")
load("@npm//http-server:index.bzl", "http_server")

npm_umd_bundle(
    name = "react_umd",
    package_name = "react",
    entry_point = "@npm//:node_modules/react/umd/react.development.js",
    excluded = [
        "react-dom",
    ],
    package = "@npm//react",
)

npm_umd_bundle(
    name = "react-dom_umd",
    package_name = "react-dom",
    entry_point = "@npm//:node_modules/react-dom/umd/react-dom.development.js",
    excluded = [
        "react",
    ],
    package = "@npm//react-dom",
)

npm_umd_bundle(
    name = "base-64_umd",
    package_name = "base-64",
    entry_point = "@npm//:node_modules/base-64/base64.js",
    excluded = [
    ],
    package = "@npm//base-64",
)

ts_library(
   name = "entry",
   srcs = ["entry.tsx"],
   deps = ["//demo/myapp/main:main", "@npm//@types/react-dom", "@npm//@types/react"]
)

ts_devserver(
    name = "dev-server",
    entry_module = "demo/demo/bundle/entry",
    deps = [":entry", ":react.umd.js", ":react-dom.umd.js", ":base-64.umd.js"]
)

filegroup(
 name = "prod-sources",
 srcs= [
    ":entry",
    "//demo/myapp/home:home",
    "//demo/myapp/main:main",
    "//demo/myframework/add:add",
    "//demo/myframework/doublestring:doublestring"
 ],
 output_group = "es6_sources"
)


# This does not work properly
webpack(
    name = "prod-bundle",
    outs = ["bundle.js"],
    args = [
        "$(locations :prod-sources)",
        "--config",
        "$(location webpack.config.js)",
        "-o",
        "$@",
    ],
    data = [
        ":prod-sources",
        "webpack.config.js",
        "@npm//:node_modules",
    ],
)

http_server(
    name = "prod-server",
    data = [":prod-bundle", "index.html"],
    templated_args = ["demo/bundle"]
)